{"version":3,"sources":["components/Header.jsx","components/Add.jsx","components/Table.jsx","components/Details.jsx","components/Edit.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","Add","useState","name","formState","setFormState","errorState","setErrorState","style","margin","to","onSubmit","e","preventDefault","axios","post","then","response","data","errors","message","console","log","navigate","catch","error","type","onChange","target","value","Table","state","setState","deleteState","setDeleteState","useEffect","get","map","item","index","key","_id","onClick","goToEdit","delete","onDeleteHandler","Details","avgState","setAvgState","id","sum","i","reviews","length","rating","comment","onChangeHandler","title","description","src","url","alt","temp","push","parseInt","put","Edit","onSubmitHandler","App","className","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gPAaeA,EAXA,SAACC,GACZ,OACI,6BACI,kD,qCC8CGC,EA9CH,SAACD,GAAW,IAAD,EACaE,mBAAS,CACzCC,KAAM,KAFa,mBACdC,EADc,KACHC,EADG,OAIeH,mBAAS,CAC3CC,KAAM,KALa,mBAIdG,EAJc,KAIFC,EAJE,OAQOL,mBAAS,IARhB,6BAgCrB,OACE,6BACE,2BAAII,EAAWH,MACf,kBAAC,IAAD,CAAMK,MAAO,CAAEC,OAAQ,OAASC,GAAG,KAAnC,QACA,0BAAMC,SAnBc,SAACC,GACvBA,EAAEC,iBACFC,IAAMC,KAAK,sCAAuCX,GAC/CY,MAAK,SAAAC,GACAA,EAASC,KAAKC,OAChBZ,EAAc,CACZJ,KAAMc,EAASC,KAAKC,OAAOhB,KAAOc,EAASC,KAAKC,OAAOhB,KAAKiB,QAAU,MAGxEC,QAAQC,IAAI,WACZC,YAAS,SAGZC,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,QAO1B,+CAEA,2BAAOC,KAAK,OAAOvB,KAAK,OAAOwB,SA7Bb,SAACf,GACvBP,EAAa,eACRD,EADO,eAETQ,EAAEgB,OAAOzB,KAAOS,EAAEgB,OAAOC,YA2BxB,4BAAQH,KAAK,UAAb,a,QCGOI,EA5CD,SAAC9B,GAAW,IAAD,EACKE,mBAAS,IADd,mBACd6B,EADc,KACPC,EADO,OAEiB9B,oBAAS,GAF1B,mBAEd+B,EAFc,KAEDC,EAFC,KAGrBC,qBAAU,WACNrB,IAAMsB,IAAI,wCACLpB,MAAK,SAAAC,GAAQ,OAAIe,EAAS,YAAIf,EAASC,UACvCM,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,QACjC,CAACQ,IAWJ,OACI,6BACM,kBAAC,IAAD,CAAMzB,MAAO,CAACC,OAAO,OAAQC,GAAG,QAAhC,iBACF,+BACI,+BACI,4BACI,sCACA,yCAGR,+BACKqB,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACP,wBAAIC,IAAKD,GACL,4BAAI,kBAAC,IAAD,CAAM7B,GAAE,mBAAc4B,EAAKG,MAAQH,EAAKnC,OAC5C,4BACI,4BAAQuC,QAAS,SAAC9B,GAAD,OAlB5B,SAACA,EAAG0B,GACjBf,YAAS,SAAD,OAAUe,EAAKG,MAiByBE,CAAS/B,EAAG0B,KAApC,QADJ,KAEZ,4BAAQI,QAAS,SAAC9B,GAAD,OAzBL,SAACA,EAAG0B,GACxBjB,QAAQC,IAAIgB,EAAKG,KACjB3B,IAAM8B,OAAN,iDAAuDN,EAAKG,MACvDzB,MAAK,SAAAC,GAAQ,OAAIiB,GAAgBD,MACjCT,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,MAqBAoB,CAAgBjC,EAAG0B,KAA3C,qBCiDDQ,EApFC,SAAC9C,GAAW,IAAD,EACGE,mBAAS,IADZ,mBAChB6B,EADgB,KACTC,EADS,OAES9B,mBAAS,GAFlB,mBAEhB6C,EAFgB,KAENC,EAFM,KAGvBb,qBAAU,WACNrB,IAAMsB,IAAN,+CAAkDpC,EAAMiD,KACnDjC,MAAK,SAAAC,GACFe,EAAS,eAAKf,EAASC,OAEvB,IADA,IAAIgC,EAAM,EACFC,EAAI,EAAGA,EAAIlC,EAASC,KAAKkC,QAAQC,OAAQF,IAC7CD,GAAOjC,EAASC,KAAKkC,QAAQD,GAAGG,OAEpCN,EAAYE,EAAMjC,EAASC,KAAKkC,QAAQC,WAE3C7B,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,QACjC,IAdoB,MAgBWvB,mBAAS,CACvCqD,QAAS,GACTD,OAAQ,IAlBW,mBAgBhBlD,EAhBgB,KAgBLC,EAhBK,KAqBjBmD,EAAkB,SAAC5C,GACrBP,EAAa,eACND,EADK,eAEPQ,EAAEgB,OAAOzB,KAAOS,EAAEgB,OAAOC,UAwBlC,OACI,6BACKE,EAAM0B,MACH,6BACI,4BAAK1B,EAAM0B,OACX,2BAAI1B,EAAM2B,aACV,yBAAKC,IAAK5B,EAAM6B,IAAKC,IAAI,KACxB9B,EAAMqB,QAAQf,KAAI,SAACC,EAAMC,GAAP,OACf,yBAAKC,IAAKD,GACN,2BAAID,EAAKiB,SACT,2BAAIjB,EAAKgB,aAKrB,KAEJ,+CACA,+CAAqBP,GACrB,0BAAMpC,SAvCU,SAACC,GACrBA,EAAEC,iBACF,IAAMiD,EAAI,eAAO/B,GACjB+B,EAAKV,QAAQW,KAAK3D,GAClB4B,EAAS,eAAI8B,IAEb,IADA,IAAIZ,EAAM,EACFC,EAAI,EAAGA,EAAIW,EAAKV,QAAQC,OAAQF,IACjCA,IAAMW,EAAKV,QAAQC,OAAS,EAC3BH,GAAOc,SAASF,EAAKV,QAAQD,GAAGG,QAEhCJ,GAAOY,EAAKV,QAAQD,GAAGG,OAG/BN,EAAaE,EAAMY,EAAKV,QAAQC,QAChCvC,IAAMmD,IAAN,iDAAoDlC,EAAMU,KAAOqB,GAC5D9C,MAAK,SAAAC,GACFI,QAAQC,IAAIL,MAEfO,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,QAsBxB,sCACA,2BAAOC,KAAK,OAAOvB,KAAK,UAAUwB,SAAU6B,IAC5C,qCACA,4BAAQrD,KAAK,SAASwB,SAAU6B,GAC5B,4BAAQ3B,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,MAEJ,4BAAQH,KAAK,UAAb,aCFDwC,EA3EF,SAAClE,GAAW,IAAD,EACcE,mBAAS,CACvCC,KAAM,KAFU,mBACbC,EADa,KACFC,EADE,KAIpB8B,qBAAU,WACNrB,IAAMsB,IAAN,+CAAkDpC,EAAMiD,KACnDjC,MAAK,SAAAC,GACFZ,EAAa,eAAKY,EAASC,OAC3BG,QAAQC,IAAIL,EAASC,SAExBM,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,QACjC,IAXiB,MAagBvB,mBAAS,CACzCC,KAAM,KAdU,mBAabG,EAba,KAaDC,EAbC,KAiBdiD,EAAkB,SAAC5C,GACrBP,EAAa,eACND,EADK,eAEPQ,EAAEgB,OAAOzB,KAAOS,EAAEgB,OAAOC,UAI5BsC,EAAkB,SAACvD,GACrBA,EAAEC,iBACFC,IAAMmD,IAAN,iDAAoD7D,EAAUqC,KAAOrC,GAChEY,MAAK,SAAAC,GACFI,QAAQC,IAAIL,EAASC,MACjBD,EAASC,KAAKC,OACdZ,EAAc,CACVJ,KAAMc,EAASC,KAAKC,OAAOhB,KAAOc,EAASC,KAAKC,OAAOhB,KAAKiB,QAAU,MAG1EC,QAAQC,IAAI,WACZC,YAAS,SAGhBC,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,OA2BpC,OACI,6BACwB,cAAnBrB,EAAUD,KATX,6BACI,oJACA,kBAAC,IAAD,CAAMK,MAAO,CAACC,OAAO,OAAQC,GAAG,QAAhC,kBAjBJ,6BACI,2BAAIJ,EAAWH,MACf,kBAAC,IAAD,CAAMK,MAAO,CAAEC,OAAQ,OAASC,GAAG,KAAnC,QACA,0BAAMC,SAAUwD,GACZ,+CACA,2BAAOzC,KAAK,OAAOvB,KAAK,OAAOwB,SAAU6B,EAAiB3B,MAAOzB,EAAUD,OAC3E,4BAAQuB,KAAK,UAAb,UACA,4BAAQA,KAAK,SAASgB,QAAS,SAAC9B,GAAD,OAAOW,YAAS,OAA/C,cCpBL6C,MAff,WAEE,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAOC,KAAK,MACZ,kBAAC,EAAD,CAAKA,KAAK,SACV,kBAAC,EAAD,CAASA,KAAK,iBACd,kBAAC,EAAD,CAAMA,KAAK,iBChBCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlE,MAAK,SAAAmE,GACJA,EAAaC,gBAEd5D,OAAM,SAAAC,GACLJ,QAAQI,MAAMA,EAAML,c","file":"static/js/main.30613b95.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from '@reach/router';\nconst Header = (props) => {\n    return (\n        <div>\n            <h1>Favorite authors</h1>\n            {/* <Link style={{margin:'5px'}} to=\"/\">Home</Link> */}\n            {/* <Link style={{margin:'5px'}} to=\"/new\">Add an author</Link> */}\n            {/* <Link style={{margin:'5px'}} to=\"/dashboard\">Dashboard</Link> */}\n        </div>\n    )\n}\n\nexport default Header","import React, { useState } from 'react'\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\nimport { Link } from '@reach/router';\n\nconst Add = (props) => {\n  const [formState, setFormState] = useState({\n    name: \"\"\n  })\n  const [errorState, setErrorState] = useState({\n    name: \"\"\n  })\n\n  const [errors, setErrors] = useState([]);\n\n  const onChangeHandler = (e) => {\n    setFormState({\n      ...formState,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    axios.post('http://localhost:8000/api/v1/create', formState)\n      .then(response => {\n        if (response.data.errors) {\n          setErrorState({\n            name: response.data.errors.name ? response.data.errors.name.message : \"\"\n          })\n        } else {\n          console.log(\"success\")\n          navigate(\"/\")\n        }\n      })\n      .catch(error => console.log(error))\n  }\n  return (\n    <div>\n      <p>{errorState.name}</p>\n      <Link style={{ margin: '5px' }} to=\"/\">Home</Link>\n      <form onSubmit={onSubmitHandler}>\n        <p>Add a new author</p>\n\n        <input type=\"text\" name=\"name\" onChange={onChangeHandler} />\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Add\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link, navigate } from '@reach/router'\n\nconst Table = (props) => {\n    const [state, setState] = useState([])\n    const [deleteState, setDeleteState] = useState(false)\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/v1/readAll')\n            .then(response => setState([...response.data]))\n            .catch(error => console.log(error))\n    }, [deleteState])\n\n    const onDeleteHandler = (e, item) => {\n        console.log(item._id)\n        axios.delete(`http://localhost:8000/api/v1/deleteOne/${item._id}`)\n            .then(response => setDeleteState(!deleteState))\n            .catch(error => console.log(error))\n    }\n    const goToEdit = (e, item) => {\n        navigate(`/edit/${item._id}`);\n    }\n    return (\n        <div>\n              <Link style={{margin:'5px'}} to=\"/new\">Add an author</Link>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Author</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {state.map((item, index) => (\n                        <tr key={index}>\n                            <td><Link to={`/details/${item._id}`}>{item.name}</Link></td>\n                            <td>\n                                <button onClick={(e) => goToEdit(e, item)}>Edit</button> |\n                <button onClick={(e) => onDeleteHandler(e, item)}>DESTROY!</button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Table\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nconst Details = (props) => {\n    const [state, setState] = useState({})\n    const [avgState, setAvgState] = useState(0);\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/v1/readOne/${props.id}`)\n            .then(response => {\n                setState({ ...response.data })\n                let sum = 0;\n                for(let i = 0; i < response.data.reviews.length; i++) {\n                    sum += response.data.reviews[i].rating\n                }\n                setAvgState(sum / response.data.reviews.length)\n            })\n            .catch(error => console.log(error))\n    }, [])\n\n    const [formState, setFormState] = useState({\n        comment: \"\",\n        rating: 1\n    })\n\n    const onChangeHandler = (e) => {\n        setFormState({\n            ...formState,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        const temp = {...state}\n        temp.reviews.push(formState);\n        setState({...temp})\n        let sum = 0\n        for(let i = 0; i < temp.reviews.length; i++) {\n            if(i === temp.reviews.length - 1) {\n                sum += parseInt(temp.reviews[i].rating)\n            } else {\n                sum += temp.reviews[i].rating\n            }\n        }\n        setAvgState((sum / temp.reviews.length))\n        axios.put(`http://localhost:8000/api/v1/updateOne/${state._id}`, temp)\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error => console.log(error))\n    }\n    return (\n        <div>\n            {state.title ?\n                <div>\n                    <h1>{state.title}</h1>\n                    <p>{state.description}</p>\n                    <img src={state.url} alt=\"\" />\n                    {state.reviews.map((item, index) => (\n                        <div key={index}>\n                            <p>{item.comment}</p>\n                            <p>{item.rating}</p>\n                        </div>\n                    ))}\n                </div>\n                :\n                null\n            }\n            <h2>Leave a review!</h2>\n            <h3>Average Rating: {avgState}</h3>\n            <form onSubmit={onSubmitHandler}>\n                <p>Comment</p>\n                <input type=\"text\" name=\"comment\" onChange={onChangeHandler} />\n                <p>Rating</p>\n                <select name=\"rating\" onChange={onChangeHandler}>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                </select>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Details\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport { navigate, Link } from '@reach/router';\n\nconst Edit = (props) => {\n    const [formState, setFormState] = useState({\n        name: \"\"\n    })\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/v1/readOne/${props.id}`)\n            .then(response => {\n                setFormState({ ...response.data })\n                console.log(response.data)\n            })\n            .catch(error => console.log(error))\n    }, [])\n\n    const [errorState, setErrorState] = useState({\n        name: \"\"\n    })\n\n    const onChangeHandler = (e) => {\n        setFormState({\n            ...formState,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        axios.put(`http://localhost:8000/api/v1/updateOne/${formState._id}`, formState)\n            .then(response => {\n                console.log(response.data)\n                if (response.data.errors) {\n                    setErrorState({\n                        name: response.data.errors.name ? response.data.errors.name.message : \"\"\n                    })\n                } else {\n                    console.log(\"success\")\n                    navigate(\"/\")\n                }\n            })\n            .catch(error => console.log(error))\n    }\n\n    const renderEditForm = () => {\n        return (\n            <div>\n                <p>{errorState.name}</p>\n                <Link style={{ margin: '5px' }} to=\"/\">Home</Link>\n                <form onSubmit={onSubmitHandler}>\n                    <p>Edit this author</p>\n                    <input type=\"text\" name=\"name\" onChange={onChangeHandler} value={formState.name} />\n                    <button type=\"submit\">Submit</button>\n                    <button type=\"cancel\" onClick={(e) => navigate(\"/\")}>Cancel</button>\n                </form>\n            </div>\n        );\n    }\n\n    const renderErrorMessage = () => {\n        return (\n            <div>\n                <p>We're sorry, but we could not find the author you are looking for. Would you like to add this author to our database?</p>\n                <Link style={{margin:'5px'}} to=\"/new\">Add an author</Link>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            {formState.name === \"CastError\"\n            ? renderErrorMessage()\n            : renderEditForm()}\n\n        </div>\n    )\n}\n\nexport default Edit\n\n","import React, {useState} from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport axios from 'axios';\nimport {Router, navigate} from '@reach/router'\nimport Add from './components/Add';\nimport Table from './components/Table';\nimport Details from './components/Details';\nimport Edit from './components/Edit';\n\n// {\n  // title:\"\",\n  // description:\"\",\n  // url:\"\",\n//   reviews: [{\n//       comment:String,\n//       rating:Number\n//   }]\n// }\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      <Router>\n        <Table path=\"/\" />\n        <Add path=\"/new\" />\n        <Details path=\"/details/:id\" />\n        <Edit path=\"/edit/:id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}